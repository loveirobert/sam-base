AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  sam-base

  Sample SAM Template for sam-base

Globals:
  Function:
    Runtime: nodejs12.x
    Timeout: 3
    MemorySize: 512
    CodeUri: ./src
    Layers:
      - !Ref Layer

Resources:
  #Event source mappings
  MyQDigestFunctionEventSourceMapping:
    Type: AWS::Lambda::EventSourceMapping
    Properties:
      BatchSize: 1
      Enabled: true
      EventSourceArn: !GetAtt MyQ.Arn
      FunctionName: !GetAtt MyQDigestFunction.Arn
  # API Gateway functions:
  HelloWorldFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: app.lambdaHandler
      Events:
        HelloWorld:
          Type: Api
          Properties:
            Path: /hello
            Method: get
  HelloWorldFunction2:
    Type: AWS::Serverless::Function
    Properties:
      Handler: app2.lambdaHandler
      Events:
        HelloWorld:
          Type: Api
          Properties:
            Path: /hello-2
            Method: get
  HelloWorldFunction3:
    Type: AWS::Serverless::Function
    Properties:
      Handler: app3.lambdaHandler
      Events:
        HelloWorld:
          Type: Api
          Properties:
            Path: /hello-3
            Method: get
  HelloWorldFunction4:
    Type: AWS::Serverless::Function
    Properties:
      Handler: app4.lambdaHandler
      Events:
        HelloWorld:
          Type: Api
          Properties:
            Path: /hello-4
            Method: get
  HelloWorldFunction5:
    Type: AWS::Serverless::Function
    Properties:
      Handler: app5.lambdaHandler
      Events:
        HelloWorld:
          Type: Api
          Properties:
            Path: /hello-5
            Method: get
  HelloWorldFunction6:
    Type: AWS::Serverless::Function
    Properties:
      Handler: app6.lambdaHandler
      Events:
        HelloWorld:
          Type: Api
          Properties:
            Path: /hello-6
            Method: get
  HelloWorldFunction7:
    Type: AWS::Serverless::Function
    Properties:
      Handler: app7.lambdaHandler
      Events:
        HelloWorld:
          Type: Api
          Properties:
            Path: /hello-7
            Method: get
  HelloWorldFunction8:
    Type: AWS::Serverless::Function
    Properties:
      Handler: app8.lambdaHandler
      Environment:
        Variables:
          MyQARN: !GetAtt MyQ.Arn
      Policies:
        - Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Action:
                - "sqs:SendMessage"
              Resource:
                - !GetAtt MyQ.Arn
      Events:
        HelloWorld:
          Type: Api
          Properties:
            Path: /hello-8
            Method: get

  # Functions
  MyQDigestFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ./src/logic/
      Handler: myq-message-handler.lambdaHandler
      Environment:
        Variables:
          MyQARN: !GetAtt MyQ.Arn
      Policies:
        - Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Action:
                - "sqs:ReceiveMessage"
                - "sqs:DeleteMessage"
                - "sqs:GetQueueAttributes"
                - "sqs:ChangeMessageVisibility"
              Resource:
                - !GetAtt MyQ.Arn

  # Node package layer:
  Layer:
    Type: AWS::Serverless::LayerVersion
    Properties:
        LayerName: layer
        Description: Common layer
        ContentUri: ../layer/nodejs.zip
        CompatibleRuntimes:
          - nodejs12.x
        RetentionPolicy: Delete

  # Messaging:
  MyDLQ:
    Type: AWS::SQS::Queue
    Properties:
      DelaySeconds: 0
      MaximumMessageSize: 262144
      MessageRetentionPeriod: 1209600
  MyQ:
    Type: AWS::SQS::Queue
    Properties:
      DelaySeconds: 0
      MaximumMessageSize: 262144
      VisibilityTimeout: 120
      RedrivePolicy:
        deadLetterTargetArn: !GetAtt MyDLQ.Arn
        maxReceiveCount: 5

Outputs:
  # ServerlessRestApi is an implicit API created out of Events key under Serverless::Function
  # Find out more about other implicit resources you can reference within SAM
  # https://github.com/awslabs/serverless-application-model/blob/master/docs/internals/generated_resources.rst#api
  HelloWorldApi:
    Description: "API Gateway endpoint URL for Prod stage for Hello World function"
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/hello/"
  HelloWorldFunction:
    Description: "Hello World Lambda Function ARN"
    Value: !GetAtt HelloWorldFunction.Arn
  HelloWorldFunctionIamRole:
    Description: "Implicit IAM Role created for Hello World function"
    Value: !GetAtt HelloWorldFunctionRole.Arn
